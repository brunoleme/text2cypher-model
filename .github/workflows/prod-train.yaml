name: Train on Prod (SageMaker)

on:
  push:
    branches:
      - main

env:
  IMAGE_TAG: prod-latest
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
  SAGEMAKER_ROLE_ARN: ${{ secrets.SAGEMAKER_ROLE_ARN }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - run: make docker-build ECR_REPOSITORY_URI=${{ env.ECR_REPOSITORY_URI }} IMAGE_TAG=${{ env.IMAGE_TAG }}
      - run: make docker-push ECR_REPOSITORY_URI=${{ env.ECR_REPOSITORY_URI }} IMAGE_TAG=${{ env.IMAGE_TAG }}
      
  deploy-lambda:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform-lambda-sagemaker
    outputs:
      lambda-deployment-arn: ${{ steps.lambda_output.outputs.lambda_deployment_arn }}
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Clean up existing Lambda and Role (if any)
        run: |
          aws lambda delete-function --function-name sagemaker-deployer || true
          aws iam delete-role-policy --role-name lambda-sagemaker-role --policy-name lambda-sagemaker-access || true
          aws iam detach-role-policy --role-name lambda-sagemaker-role --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole || true
          aws iam detach-role-policy --role-name lambda-sagemaker-role --policy-arn arn:aws:iam::aws:policy/AmazonSageMakerFullAccess || true
          aws iam delete-role --role-name lambda-sagemaker-role || true

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

  trigger-sagemaker:
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-lambda]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - run: pip install sagemaker boto3

      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - run: make sagemaker-pipeline-trigger \
          ECR_REPOSITORY_URI=${{ env.ECR_REPOSITORY_URI }} \
          IMAGE_TAG=${{ env.IMAGE_TAG }} \
          SAGEMAKER_ROLE_ARN=${{ env.SAGEMAKER_ROLE_ARN }} \
          ENV=dev \
          WANDB_API_KEY=${{ env.WANDB_API_KEY }} \
          OPENAI_API_KEY=${{ env.OPENAI_API_KEY }} \
          PREPROCESSING_INSTANCE_TYPE=${{ env.PREPROCESSING_INSTANCE_TYPE }} \
          TRAINING_INSTANCE_TYPE=${{ env.TRAINING_INSTANCE_TYPE }} \
          EVALUATION_INSTANCE_TYPE=${{ env.EVALUATION_INSTANCE_TYPE }} \
          DEPLOYMENT_INSTANCE_TYPE=${{ env.DEPLOYMENT_INSTANCE_TYPE }} \
          LAMBDA_DEPLOYMENT_ARN=${{ needs.deploy-lambda.outputs.lambda-deployment-arn }}

      - name: Output SageMaker Pipeline Execution ARN
        run: echo "Pipeline triggered successfully"
