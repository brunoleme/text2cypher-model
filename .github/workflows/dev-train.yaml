name: Train on Dev (SageMaker)

on:
  push:
    branches:
      - dev

env:
  IMAGE_TAG: dev-latest
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
  SAGEMAKER_ROLE_ARN: ${{ secrets.SAGEMAKER_ROLE_ARN }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - run: make install
      - run: make test ENV=dev

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - run: make docker-build ECR_REPOSITORY_URI=${{ env.ECR_REPOSITORY_URI }} IMAGE_TAG=${{ env.IMAGE_TAG }}
      - run: make docker-push ECR_REPOSITORY_URI=${{ env.ECR_REPOSITORY_URI }} IMAGE_TAG=${{ env.IMAGE_TAG }}

  trigger-sagemaker:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - run: make sagemaker-trigger \
          ECR_REPOSITORY_URI=${{ env.ECR_REPOSITORY_URI }} \
          IMAGE_TAG=${{ env.IMAGE_TAG }} \
          SAGEMAKER_ROLE_ARN=${{ env.SAGEMAKER_ROLE_ARN }} \
          ENV=dev \
          WANDB_API_KEY=${{ secrets.WANDB_API_KEY }}
